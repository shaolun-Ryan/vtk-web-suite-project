<?xml version="1.0"?>
<testsuite name="HeadlessChrome 79.0.3945 (Linux 0.0.0)" package="" timestamp="2020-01-02T17:05:31" id="0" hostname="travis-job-e9a7026e-36ca-41a4-978b-645c6c3793f5" tests="603" errors="0" failures="0" time="941.931">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/79.0.3945.88 Safari/537.36"/>
  </properties>
  <testcase name="# Test vtkMatrixBuilder rotateFromDirections&#xA; should be truthy" time="0.005" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkMatrixBuilder rotateFromDirections&#xA;"/>
  <testcase name="# Test vtkMatrixBuilder rotateFromDirections&#xA; should be truthy" time="0.006" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkMatrixBuilder rotateFromDirections&#xA;"/>
  <testcase name="# Test vtkMatrixBuilder rotateFromDirections&#xA; should be truthy" time="0.007" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkMatrixBuilder rotateFromDirections&#xA;"/>
  <testcase name="# Test vtkBox instance&#xA; Make sure the class definition exists" time="0.007" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox instance&#xA;"/>
  <testcase name="# Test vtkBox instance&#xA; should be truthy" time="0.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox instance&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox intersectBox&#xA; should be equal" time="0.011" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox intersectBox&#xA;"/>
  <testcase name="# Test vtkBox bounds&#xA; should be equal" time="0.011" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox bounds&#xA;"/>
  <testcase name="# Test vtkBox bounds&#xA; should be equal" time="0.011" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox bounds&#xA;"/>
  <testcase name="# Test vtkBox bounds&#xA; should be equal" time="0.012" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox bounds&#xA;"/>
  <testcase name="# Test vtkBox bounds&#xA; should be equal" time="0.012" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox bounds&#xA;"/>
  <testcase name="# Test vtkBox bounds&#xA; should be equal" time="0.012" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox bounds&#xA;"/>
  <testcase name="# Test vtkBox bounds&#xA; should be equal" time="0.013" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox bounds&#xA;"/>
  <testcase name="# Test vtkBox evaluateFunction&#xA; should be equal" time="0.013" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox evaluateFunction&#xA;"/>
  <testcase name="# Test vtkBox evaluateFunction&#xA; should be equal" time="0.013" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox evaluateFunction&#xA;"/>
  <testcase name="# Test vtkBox evaluateFunction&#xA; should be equal" time="0.013" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox evaluateFunction&#xA;"/>
  <testcase name="# Test vtkBox evaluateFunction&#xA; should be equal" time="0.014" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkBox evaluateFunction&#xA;"/>
  <testcase name="# Test vtkCell instance&#xA; Make sure the class definition exists" time="0.015" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell instance&#xA;"/>
  <testcase name="# Test vtkCell instance&#xA; should be truthy" time="0.015" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell instance&#xA;"/>
  <testcase name="# Test vtkCell initialize without pointsIds&#xA; should be equal" time="0.016" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize without pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize without pointsIds&#xA; should be equal" time="0.016" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize without pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize without pointsIds&#xA; should be equal" time="0.016" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize without pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize without pointsIds&#xA; should be equal" time="0.016" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize without pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize without pointsIds&#xA; should be equal" time="0.017" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize without pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equal" time="0.017" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equal" time="0.017" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equal" time="0.017" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equal" time="0.017" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should not be equal" time="0.018" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equal" time="0.018" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equivalent" time="0.018" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equivalent" time="0.018" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell initialize with pointsIds&#xA; should be equivalent" time="0.019" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell initialize with pointsIds&#xA;"/>
  <testcase name="# Test vtkCell deepCopy&#xA; should not be equal" time="0.019" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell deepCopy&#xA;"/>
  <testcase name="# Test vtkCell deepCopy&#xA; should be equivalent" time="0.02" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCell deepCopy&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Make sure the class definition exists" time="0.021" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Make sure the newInstance method exists." time="0.021" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default number of arrays should be 0" time="0.021" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default Scalars should be null" time="0.021" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding scalars empty DSA should return index of 0" time="0.022" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting scalars should return 0 (the index of the array)." time="0.022" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting scalars with an invalid name should return -1." time="0.022" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting scalars with an invalid name should reset the attribute." time="0.023" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default Vectors should be null" time="0.023" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding vectors empty DSA should return index of 1" time="0.023" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting vectors should return 1 (the index of the array)." time="0.023" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting vectors with an invalid name should return -1." time="0.023" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting vectors with an invalid name should reset the attribute." time="0.024" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default Normals should be null" time="0.024" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding normals empty DSA should return index of 2" time="0.024" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting normals should return 2 (the index of the array)." time="0.024" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting normals with an invalid name should return -1." time="0.025" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting normals with an invalid name should reset the attribute." time="0.025" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default TCoords should be null" time="0.025" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding tcoords empty DSA should return index of 3" time="0.025" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting tcoords should return 3 (the index of the array)." time="0.026" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting tcoords with an invalid name should return -1." time="0.026" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting tcoords with an invalid name should reset the attribute." time="0.026" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default Tensors should be null" time="0.026" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding tensors empty DSA should return index of 4" time="0.026" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting tensors should return 4 (the index of the array)." time="0.027" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting tensors with an invalid name should return -1." time="0.027" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting tensors with an invalid name should reset the attribute." time="0.027" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default GlobalIds should be null" time="0.027" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding globalids empty DSA should return index of 5" time="0.028" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting globalids should return 5 (the index of the array)." time="0.028" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting globalids with an invalid name should return -1." time="0.028" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting globalids with an invalid name should reset the attribute." time="0.028" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Default PedigreeIds should be null" time="0.028" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Adding pedigreeids empty DSA should return index of 6" time="0.029" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting pedigreeids should return 6 (the index of the array)." time="0.029" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting pedigreeids with an invalid name should return -1." time="0.029" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkDataSetAttributes instance&#xA; Setting pedigreeids with an invalid name should reset the attribute." time="0.029" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataSetAttributes instance&#xA;"/>
  <testcase name="# Test vtkLine instance&#xA; Make sure the class definition exists" time="0.03" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine instance&#xA;"/>
  <testcase name="# Test vtkLine instance&#xA; should be truthy" time="0.031" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine instance&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; Points on line" time="0.031" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; Points on line" time="0.031" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; Points on line" time="0.031" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; Intersection" time="0.031" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; should be equal" time="0.032" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; should be equal" time="0.032" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::intersection&#xA; No intersection" time="0.032" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::intersection&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; Invalid line" time="0.032" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.033" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equivalent" time="0.033" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; On line" time="0.033" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.033" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equivalent" time="0.033" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.033" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equivalent" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equivalent" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equal" time="0.034" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine static::distanceToLine&#xA; should be equivalent" time="0.035" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine static::distanceToLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equal" time="0.036" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equivalent" time="0.036" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equal" time="0.036" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equal" time="0.036" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equivalent" time="0.036" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equal" time="0.037" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkLine intersectWithLine&#xA; should be equal" time="0.037" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLine intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane instance&#xA; Make sure the class definition exists" time="0.037" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane instance&#xA;"/>
  <testcase name="# Test vtkPlane instance&#xA; should be truthy" time="0.038" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane instance&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.038" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.038" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.038" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.039" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.039" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.039" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.039" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.039" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectVector&#xA; should be equal" time="0.04" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectVector&#xA;"/>
  <testcase name="# Test vtkPlane projectPoint&#xA; should be equal" time="0.04" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectPoint&#xA;"/>
  <testcase name="# Test vtkPlane projectPoint&#xA; should be equal" time="0.04" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectPoint&#xA;"/>
  <testcase name="# Test vtkPlane projectPoint&#xA; should be equal" time="0.04" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane projectPoint&#xA;"/>
  <testcase name="# Test vtkPlane DistanceToPlane&#xA; should be equal" time="0.041" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane DistanceToPlane&#xA;"/>
  <testcase name="# Test vtkPlane DistanceToPlane&#xA; should be equal" time="0.041" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane DistanceToPlane&#xA;"/>
  <testcase name="# Test vtkPlane Push&#xA; should be equal" time="0.041" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane Push&#xA;"/>
  <testcase name="# Test vtkPlane Push&#xA; should be equal" time="0.041" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane Push&#xA;"/>
  <testcase name="# Test vtkPlane Push&#xA; should be equal" time="0.042" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane Push&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.042" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.042" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.042" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.042" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.043" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.044" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.044" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.044" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.044" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.044" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithLine&#xA; should be equal" time="0.045" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithLine&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.045" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.045" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.045" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.046" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.047" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.047" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.047" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.047" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane intersectWithPlane&#xA; should be equal" time="0.048" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane intersectWithPlane&#xA;"/>
  <testcase name="# Test vtkPlane evaluateFunction&#xA; should be equal" time="0.048" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane evaluateFunction&#xA;"/>
  <testcase name="# Test vtkPlane evaluateFunction&#xA; should be equal" time="0.048" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane evaluateFunction&#xA;"/>
  <testcase name="# Test vtkPlane evaluateFunction&#xA; should be equal" time="0.048" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPlane evaluateFunction&#xA;"/>
  <testcase name="# Test vtkPolyData instance&#xA; Make sure the class definition exists" time="0.049" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData instance&#xA;"/>
  <testcase name="# Test vtkPolyData instance&#xA; should be truthy" time="1.979" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData instance&#xA;"/>
  <testcase name="# Test vtkPolyData cells&#xA; should be equivalent" time="1.98" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData cells&#xA;"/>
  <testcase name="# Test vtkPolyData cells&#xA; cells should be made of 3 points" time="1.98" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData cells&#xA;"/>
  <testcase name="# Test vtkTriangle instance&#xA; Make sure the class definition exists" time="1.981" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle instance&#xA;"/>
  <testcase name="# Test vtkTriangle instance&#xA; should be truthy" time="1.981" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle instance&#xA;"/>
  <testcase name="# Test vtkTriangle static::computeNormalDirection&#xA; should be equivalent" time="1.981" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle static::computeNormalDirection&#xA;"/>
  <testcase name="# Test vtkTriangle static::computeNormalDirection&#xA; should be equivalent" time="1.981" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle static::computeNormalDirection&#xA;"/>
  <testcase name="# Test vtkTriangle static::computeNormalDirection&#xA; should be equivalent" time="1.982" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle static::computeNormalDirection&#xA;"/>
  <testcase name="# Test vtkTriangle static::computeNormal&#xA; should be equivalent" time="1.982" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle static::computeNormal&#xA;"/>
  <testcase name="# Test vtkTriangle static::computeNormal&#xA; should be equivalent" time="1.982" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle static::computeNormal&#xA;"/>
  <testcase name="# Test vtkTriangle static::computeNormal&#xA; should be equivalent" time="1.984" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle static::computeNormal&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.984" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.984" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.985" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equivalent" time="1.985" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equivalent" time="1.985" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.985" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.985" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equivalent" time="1.985" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equivalent" time="1.986" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.986" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.986" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.986" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equal" time="1.986" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle intersectWithLine&#xA; should be equivalent" time="1.987" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle intersectWithLine&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equal" time="1.987" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equal" time="1.987" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equivalent" time="1.987" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equivalent" time="1.988" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equal" time="1.988" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equal" time="1.988" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equivalent" time="1.988" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equivalent" time="1.988" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equal" time="1.988" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equal" time="1.989" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equivalent" time="1.989" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkTriangle evaluatePosition&#xA; should be equivalent" time="1.993" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTriangle evaluatePosition&#xA;"/>
  <testcase name="# Test vtkCutter cutCube&#xA; should be equal" time="1.993" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCutter cutCube&#xA;"/>
  <testcase name="# Test vtkCutter cutCube&#xA; should be equal" time="1.993" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCutter cutCube&#xA;"/>
  <testcase name="# Test vtkCutter cutCube&#xA; should be equal" time="1.993" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCutter cutCube&#xA;"/>
  <testcase name="# Test vtkCutter cutCube&#xA; should be equal" time="1.993" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCutter cutCube&#xA;"/>
  <testcase name="# Test vtkCutter cutCube&#xA; should be equal" time="1.994" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCutter cutCube&#xA;"/>
  <testcase name="# Test vtkCutter cutCube&#xA; should be equal" time="1.994" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCutter cutCube&#xA;"/>
  <testcase name="# Test vtkAppendPolyData instance&#xA; Make sure the class definition exists." time="1.994" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAppendPolyData instance&#xA;"/>
  <testcase name="# Test vtkAppendPolyData instance&#xA; Make sure an instance can be created." time="1.998" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAppendPolyData instance&#xA;"/>
  <testcase name="# Test vtkAppendPolyData execution&#xA; Make sure the number of points is correct." time="1.998" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAppendPolyData execution&#xA;"/>
  <testcase name="# Test vtkAppendPolyData execution&#xA; Make sure the output data type is correct." time="2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAppendPolyData execution&#xA;"/>
  <testcase name="# Test vtkAppendPolyData execution&#xA; Make sure the number of polys is correct." time="2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAppendPolyData execution&#xA;"/>
  <testcase name="# Test vtkCalculator instance&#xA; Make sure the class definition exists." time="2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator instance&#xA;"/>
  <testcase name="# Test vtkCalculator instance&#xA; Make sure an instance can be created." time="2.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator instance&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; Output dataset exists" time="2.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; The output dataset should be a vtkPolydata" time="2.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; The number of points did not change between input 66 and output 66" time="2.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; Output point-scalars array exists." time="2.008" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; Output point-scalars is &quot;sine wave&quot;." time="2.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; Output field-data array exists." time="2.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkCalculator execution&#xA; The uniform result variable should be 22.55; got 22.549999237060547." time="2.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCalculator execution&#xA;"/>
  <testcase name="# Test vtkImageStreamline instance&#xA; Make sure the class definition exist" time="2.009" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline instance&#xA;"/>
  <testcase name="# Test vtkImageStreamline instance&#xA; Make sure the instance exist" time="2.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline instance&#xA;"/>
  <testcase name="# Test vtkImageStreamline instance&#xA; Default integrationStep should be 1" time="2.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline instance&#xA;"/>
  <testcase name="# Test vtkImageStreamline instance&#xA; Default MaximumNumberOfSteps should be 1000" time="2.01" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline instance&#xA;"/>
  <testcase name="# Test vtkImageStreamline instance&#xA; Updated value of integrationStep should be 0.1" time="2.109" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline instance&#xA;"/>
  <testcase name="# Test vtkImageStreamline execution&#xA; Output dataset exist" time="2.11" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline execution&#xA;"/>
  <testcase name="# Test vtkImageStreamline execution&#xA; The output dataset should be a vtkPolydata" time="2.11" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline execution&#xA;"/>
  <testcase name="# Test vtkImageStreamline execution&#xA; The number of points should be 2228" time="2.11" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkImageStreamline execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter instance&#xA; Make sure the class definition exists." time="2.111" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter instance&#xA;"/>
  <testcase name="# Test vtkTubeFilter instance&#xA; Make sure an instance can be created." time="2.117" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter instance&#xA;"/>
  <testcase name="# Test vtkTubeFilter execution&#xA; Make sure the output data type is double." time="2.117" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter execution&#xA; Make sure the output number of points is correct without capping." time="2.118" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter execution&#xA; Make sure the output number of normals is correct without capping." time="2.12" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter execution&#xA; Make sure the output data type is float." time="2.12" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter execution&#xA; Make sure the output number of points is correct with capping." time="2.12" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter execution&#xA; Make sure the output number of normals is correct with capping." time="2.125" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter execution&#xA;"/>
  <testcase name="# Test vtkTubeFilter colorMapping&#xA; Make sure the output number of points is correct without capping." time="2.125" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter colorMapping&#xA;"/>
  <testcase name="# Test vtkTubeFilter colorMapping&#xA; Make sure the length of the radius array is correct." time="2.126" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter colorMapping&#xA;"/>
  <testcase name="# Test vtkTubeFilter colorMapping&#xA; Make sure the length of the color array is correct." time="2.127" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter colorMapping&#xA;"/>
  <testcase name="# Test vtkTubeFilter colorMapping&#xA; Make sure the array name to color by is correct." time="2.127" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter colorMapping&#xA;"/>
  <testcase name="# Test vtkTubeFilter colorMapping&#xA; Make sure the scalar mode is correct." time="2.127" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter colorMapping&#xA;"/>
  <testcase name="# Test vtkTubeFilter colorMapping&#xA; Make sure the color mode is correct." time="2.128" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTubeFilter colorMapping&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Make sure the class definition exist" time="2.128" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Make sure the instance exist" time="2.128" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Default ScaleFactor should be 1" time="2.129" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Default UseNormal should be false" time="2.129" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Default xyPlane should be false" time="2.129" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Default normal should be [0, 0, 1]" time="2.129" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar instance&#xA; Updated value of ScaleFactor should be 2.5" time="2.131" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar instance&#xA;"/>
  <testcase name="# Test vtkWarpScalar execution&#xA; Output dataset exist" time="2.131" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar execution&#xA;"/>
  <testcase name="# Test vtkWarpScalar execution&#xA; The output dataset should be a vtkPolydata" time="2.131" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar execution&#xA;"/>
  <testcase name="# Test vtkWarpScalar execution&#xA; The number of points do not change between input 50 and output 50" time="2.131" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkWarpScalar execution&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane instance&#xA; Make sure the class definition exists" time="2.132" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane instance&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane instance&#xA; should be truthy" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane instance&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.134" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.135" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.136" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.137" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.138" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.139" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.139" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.139" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.139" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.139" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.139" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation&#xA; should be equal" time="2.141" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.141" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.141" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.142" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.143" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.144" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.145" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.146" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.147" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.147" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.147" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.147" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToPlane TCoords generation automatic&#xA; should be equal" time="2.147" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToPlane TCoords generation automatic&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere instance&#xA; Make sure the class definition exists" time="2.147" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere instance&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere instance&#xA; should be truthy" time="2.151" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere instance&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.151" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.151" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.151" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.151" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.151" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.152" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.153" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.154" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.155" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.156" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.157" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.157" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkTextureMapToSphere TCoords generation&#xA; should be equal" time="2.162" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkTextureMapToSphere TCoords generation&#xA;"/>
  <testcase name="# Test vtkPiecewiseFunctionProxy&#xA; Custom points should not be active in Gaussian mode" time="2.162" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPiecewiseFunctionProxy&#xA;"/>
  <testcase name="# Test vtkPiecewiseFunctionProxy&#xA; Custom points should be active in Points mode" time="2.163" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPiecewiseFunctionProxy&#xA;"/>
  <testcase name="# Test vtkPiecewiseFunctionProxy&#xA; Default nodes" time="2.163" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPiecewiseFunctionProxy&#xA;"/>
  <testcase name="# Test vtkPiecewiseFunctionProxy&#xA; Default points" time="2.163" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPiecewiseFunctionProxy&#xA;"/>
  <testcase name="# Test vtkPiecewiseFunctionProxy&#xA; Default nodes" time="2.164" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPiecewiseFunctionProxy&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.164" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.164" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.165" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.165" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.165" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.165" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.165" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.165" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.166" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.166" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.166" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.166" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkAbstractMapper publicAPI&#xA; should be equal" time="2.166" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkAbstractMapper publicAPI&#xA;"/>
  <testcase name="# Test vtkCellPicker instance&#xA; Make sure the class definition exists" time="2.167" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCellPicker instance&#xA;"/>
  <testcase name="# Test vtkCellPicker instance&#xA; should be truthy" time="2.171" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCellPicker instance&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.172" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.173" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.173" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.174" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.174" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.174" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.174" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.175" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.175" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.175" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.175" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.176" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.176" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.176" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.176" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.177" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.177" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.177" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.177" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.178" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.178" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.178" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.178" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.178" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.179" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.179" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.179" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.179" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.179" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.18" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.18" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.18" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.18" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.18" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.181" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.181" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.181" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.181" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.181" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.182" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.182" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.182" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.182" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.182" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.183" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.183" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.183" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.183" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.184" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.184" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.184" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.184" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.185" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.185" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.185" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.185" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.186" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.186" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.186" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.186" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.187" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.187" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.187" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.188" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.188" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.188" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.188" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.189" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.189" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.189" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.189" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkCoordinate publicAPI&#xA; should be equivalent" time="2.19" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkCoordinate publicAPI&#xA;"/>
  <testcase name="# Test vtkPointPicker instance&#xA; Make sure the class definition exists" time="2.19" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPointPicker instance&#xA;"/>
  <testcase name="# Test vtkPointPicker instance&#xA; should be truthy" time="2.19" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPointPicker instance&#xA;"/>
  <testcase name="# Macro methods algo tests&#xA; populate publicAPI" time="2.191" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods algo tests&#xA;"/>
  <testcase name="# Macro methods algo tests&#xA; return input data" time="2.191" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods algo tests&#xA;"/>
  <testcase name="# Macro methods algo tests&#xA; Add two input arrays" time="2.191" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods algo tests&#xA;"/>
  <testcase name="# Macro methods algo tests&#xA; Subtract two input arrays" time="2.191" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods algo tests&#xA;"/>
  <testcase name="# Macro methods algo tests&#xA; Multiply two input arrays" time="2.191" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods algo tests&#xA;"/>
  <testcase name="# Macro methods algo tests&#xA; Divide two input arrays, using outputPort" time="2.192" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods algo tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; macro setget" time="2.192" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; Initial gets should match defaults" time="2.192" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; Bool get should match set" time="2.193" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; Initial gets should match defaults" time="2.193" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; Int get should match set" time="2.193" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; mtime should increase after set" time="2.193" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods scalar tests&#xA; mtime should not increase after idempotent set" time="2.194" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods scalar tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Initial gets should match defaults" time="2.194" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Throw if no set method declared" time="2.194" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Array spread set OK" time="2.194" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Array spread set should match get" time="2.194" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; OK to set a single array argument" time="2.195" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Array set should match get" time="2.195" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; mtime should increase after set" time="2.195" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Invalid number of values should throw" time="2.195" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Keep default value after illegal set" time="2.195" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; mtime should not increase after idempotent set" time="2.196" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Invalid number of values should throw" time="2.196" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Keep value after illegal set" time="2.196" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Invalid set with string should throw" time="2.196" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods array tests&#xA; Keep value after illegal set" time="2.197" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods array tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Initial gets should match defaults" time="2.197" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Enum set should match get" time="2.197" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; should be truthy" time="2.197" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Enum set by index should get matching enum value" time="2.197" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Setting idempotent value should return false" time="2.198" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Invalid enum index should throw" time="2.198" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Enum set out of range should be rejected" time="2.198" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Invalid enum string should throw" time="2.198" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Enum set string out of range should be rejected" time="2.199" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Invalid enum set with array/object should throw" time="2.199" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods enum tests&#xA; Enum set string out of range should be rejected" time="2.199" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods enum tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Get entire model" time="2.2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Get defaults back test" time="2.2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Object should be frozen" time="2.2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should be truthy" time="2.2" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should be truthy" time="2.201" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Object modified fires" time="2.201" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Object modified does not fire after unsubscribe" time="2.201" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Test mult-set" time="2.201" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Float get should match multi-set" time="2.201" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; Array multi-set should match get" time="2.202" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should be truthy" time="2.202" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should be truthy" time="2.202" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should be falsy" time="2.202" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should be equal" time="2.202" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; should not throw" time="2.203" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods object tests&#xA; All calls should do nothing after delete" time="2.203" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods object tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbAbort1 should be called first" time="2.203" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbAbort2 should be called second" time="2.204" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; Only 2 callbacks should be invoked, not 3" time="2.204" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbPriority2 should be called first" time="2.204" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbPriority2 should be called first" time="2.204" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbPriority1 should be called second" time="2.204" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbPriority0 should be called third" time="2.306" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbPriorityLast should be called last after 101ms" time="2.306" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods event tests&#xA; cbPriority2 should be called exactly twice" time="2.307" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods event tests&#xA;"/>
  <testcase name="# Macro methods keystore tests&#xA; key1 should exist in keystore" time="2.307" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods keystore tests&#xA;"/>
  <testcase name="# Macro methods keystore tests&#xA; key2 should exist in keystore" time="2.307" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods keystore tests&#xA;"/>
  <testcase name="# Macro methods keystore tests&#xA; key3 should exist in keystore" time="2.308" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods keystore tests&#xA;"/>
  <testcase name="# Macro methods keystore tests&#xA; Delete key2 should succeed" time="2.308" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods keystore tests&#xA;"/>
  <testcase name="# Macro methods keystore tests&#xA; There should be no keys after clearing" time="2.308" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Macro methods keystore tests&#xA;"/>
  <testcase name="# Test vtkDataArray serialization/deserialization&#xA; Make sure the class definition exist" time="2.308" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataArray serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkDataArray serialization/deserialization&#xA; Make sure the instance exist" time="2.309" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataArray serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkDataArray serialization/deserialization&#xA; Make sure we can get serialize data" time="2.312" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataArray serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkDataArray serialization/deserialization&#xA; Make sure we can get deserialize data" time="2.312" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataArray serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkDataArray serialization/deserialization&#xA; We have two different instances" time="2.312" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataArray serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkDataArray serialization/deserialization&#xA; But same serialized content" time="2.313" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkDataArray serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPoints serialization/deserialization&#xA; Make sure the class definition exist" time="2.313" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPoints serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPoints serialization/deserialization&#xA; Make sure the instance exist" time="2.313" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPoints serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPoints serialization/deserialization&#xA; Make sure we can get serialize data" time="2.314" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPoints serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPoints serialization/deserialization&#xA; Make sure we can get deserialize data" time="2.314" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPoints serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPoints serialization/deserialization&#xA; We have two different instances" time="2.314" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPoints serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPoints serialization/deserialization&#xA; But same serialized content" time="2.314" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPoints serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkLookupTable serialization/deserialization&#xA; Make sure the class definition exist" time="2.315" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLookupTable serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkLookupTable serialization/deserialization&#xA; Make sure the instance exist" time="2.316" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLookupTable serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkLookupTable serialization/deserialization&#xA; Make sure we can get serialize data" time="2.317" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLookupTable serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkLookupTable serialization/deserialization&#xA; Make sure we can get deserialize data" time="2.317" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLookupTable serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkLookupTable serialization/deserialization&#xA; We have two different instances" time="2.318" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLookupTable serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkLookupTable serialization/deserialization&#xA; But same serialized content" time="2.318" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkLookupTable serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkScalarsToColors serialization/deserialization&#xA; Make sure the class definition exist" time="2.318" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkScalarsToColors serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkScalarsToColors serialization/deserialization&#xA; Make sure the instance exist" time="2.324" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkScalarsToColors serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkScalarsToColors serialization/deserialization&#xA; Make sure we can get serialize data" time="2.324" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkScalarsToColors serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkScalarsToColors serialization/deserialization&#xA; Make sure we can get deserialize data" time="2.324" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkScalarsToColors serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkScalarsToColors serialization/deserialization&#xA; We have two different instances" time="2.325" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkScalarsToColors serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkScalarsToColors serialization/deserialization&#xA; But same serialized content" time="2.325" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkScalarsToColors serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPolyData serialization/deserialization&#xA; Make sure the class definition exist" time="2.326" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPolyData serialization/deserialization&#xA; Make sure the instance exist" time="2.327" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPolyData serialization/deserialization&#xA; Make sure we can get serialize data" time="2.328" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPolyData serialization/deserialization&#xA; Make sure we can get deserialize data" time="2.329" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPolyData serialization/deserialization&#xA; We have two different instances" time="2.329" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData serialization/deserialization&#xA;"/>
  <testcase name="# Test vtkPolyData serialization/deserialization&#xA; But same serialized content" time="2.33" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Test vtkPolyData serialization/deserialization&#xA;"/>
  <testcase name="# Proxy activation via config&#xA; No initial active source" time="2.338" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Proxy activation via config&#xA;"/>
  <testcase name="# Proxy activation via config&#xA; Active source set after proxy creation" time="2.339" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Proxy activation via config&#xA;"/>
  <testcase name="# Proxy activation via .activate()&#xA; No initial active source" time="2.339" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Proxy activation via .activate()&#xA;"/>
  <testcase name="# Proxy activation via .activate()&#xA; No active source after proxy creation" time="2.34" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Proxy activation via .activate()&#xA;"/>
  <testcase name="# Proxy activation via .activate()&#xA; Proxy manager should be modified after proxy activation" time="2.34" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Proxy activation via .activate()&#xA;"/>
  <testcase name="# Proxy activation via .activate()&#xA; Active source set" time="2.34" classname="HeadlessChrome_79_0_3945_(Linux_0_0_0).# Proxy activation via .activate()&#xA;"/>
  <system-out>
    <![CDATA[HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'TAP version 13'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkMatrixBuilder rotateFromDirections'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 1 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 2 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 3 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkBox instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 4 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 5 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkBox intersectBox'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 6 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 7 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 8 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 9 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 10 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 11 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 12 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 13 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 14 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 15 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 16 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkBox bounds'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 17 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 18 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 19 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 20 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 21 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 22 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkBox evaluateFunction'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 23 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 24 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 25 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 26 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCell instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 27 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 28 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCell initialize without pointsIds'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 29 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 30 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 31 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 32 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 33 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCell initialize with pointsIds'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 34 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 35 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 36 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 37 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 38 should not be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 39 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 40 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 41 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 42 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCell deepCopy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 43 should not be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 44 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkDataSetAttributes instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 45 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 46 Make sure the newInstance method exists.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 47 Default number of arrays should be 0'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 48 Default Scalars should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 49 Adding scalars empty DSA should return index of 0'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 50 Setting scalars should return 0 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 51 Setting scalars with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 52 Setting scalars with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 53 Default Vectors should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 54 Adding vectors empty DSA should return index of 1'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 55 Setting vectors should return 1 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 56 Setting vectors with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 57 Setting vectors with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 58 Default Normals should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 59 Adding normals empty DSA should return index of 2'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 60 Setting normals should return 2 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 61 Setting normals with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 62 Setting normals with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 63 Default TCoords should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 64 Adding tcoords empty DSA should return index of 3'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 65 Setting tcoords should return 3 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 66 Setting tcoords with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 67 Setting tcoords with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 68 Default Tensors should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 69 Adding tensors empty DSA should return index of 4'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 70 Setting tensors should return 4 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 71 Setting tensors with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 72 Setting tensors with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 73 Default GlobalIds should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 74 Adding globalids empty DSA should return index of 5'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 75 Setting globalids should return 5 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 76 Setting globalids with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 77 Setting globalids with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 78 Default PedigreeIds should be null'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 79 Adding pedigreeids empty DSA should return index of 6'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 80 Setting pedigreeids should return 6 (the index of the array).'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 81 Setting pedigreeids with an invalid name should return -1.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 82 Setting pedigreeids with an invalid name should reset the attribute.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkLine instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 83 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 84 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkLine static::intersection'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 85 Points on line'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 86 Points on line'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 87 Points on line'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 88 Intersection'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 89 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 90 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 91 No intersection'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkLine static::distanceToLine'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 92 Invalid line'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 93 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 94 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 95 On line'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 96 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 97 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 98 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 99 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 100 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 101 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 102 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 103 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 104 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 105 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 106 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkLine intersectWithLine'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 107 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 108 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 109 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 110 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 111 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 112 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 113 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 114 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 115 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane projectVector'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 116 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 117 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 118 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 119 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 120 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 121 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 122 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 123 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 124 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane projectPoint'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 125 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 126 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 127 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane DistanceToPlane'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 128 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 129 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane Push'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 130 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 131 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 132 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane intersectWithLine'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 133 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 134 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 135 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 136 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 137 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 138 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 139 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 140 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 141 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 142 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 143 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 144 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 145 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 146 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 147 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 148 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 149 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane intersectWithPlane'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 150 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 151 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 152 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 153 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 154 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 155 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 156 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 157 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 158 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 159 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 160 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 161 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 162 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 163 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 164 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPlane evaluateFunction'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 165 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 166 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 167 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPolyData instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 168 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 169 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPolyData cells'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 170 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 171 cells should be made of 3 points'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTriangle instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 172 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 173 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTriangle static::computeNormalDirection'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 174 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 175 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 176 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTriangle static::computeNormal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 177 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 178 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 179 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTriangle intersectWithLine'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 180 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 181 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 182 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 183 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 184 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 185 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 186 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 187 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 188 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 189 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 190 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 191 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 192 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 193 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTriangle evaluatePosition'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 194 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 195 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 196 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 197 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 198 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 199 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 200 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 201 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 202 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 203 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 204 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 205 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCutter cutCube'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 206 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 207 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 208 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 209 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 210 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 211 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkAppendPolyData instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 212 Make sure the class definition exists.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 213 Make sure an instance can be created.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkAppendPolyData execution'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 214 Make sure the number of points is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 215 Make sure the output data type is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 216 Make sure the number of polys is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCalculator instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 217 Make sure the class definition exists.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 218 Make sure an instance can be created.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCalculator execution'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 219 Output dataset exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 220 The output dataset should be a vtkPolydata'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 221 The number of points did not change between input 66 and output 66'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 222 Output point-scalars array exists.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 223 Output point-scalars is "sine wave".'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 224 Output field-data array exists.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 225 The uniform result variable should be 22.55; got 22.549999237060547.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkImageStreamline instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 226 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 227 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 228 Default integrationStep should be 1'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 229 Default MaximumNumberOfSteps should be 1000'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 230 Updated value of integrationStep should be 0.1'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkImageStreamline execution'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 231 Output dataset exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 232 The output dataset should be a vtkPolydata'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 233 The number of points should be 2228'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTubeFilter instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 234 Make sure the class definition exists.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 235 Make sure an instance can be created.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTubeFilter execution'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 236 Make sure the output data type is double.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 237 Make sure the output number of points is correct without capping.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 238 Make sure the output number of normals is correct without capping.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 239 Make sure the output data type is float.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 240 Make sure the output number of points is correct with capping.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 241 Make sure the output number of normals is correct with capping.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTubeFilter colorMapping'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 242 Make sure the output number of points is correct without capping.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 243 Make sure the length of the radius array is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 244 Make sure the length of the color array is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 245 Make sure the array name to color by is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 246 Make sure the scalar mode is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 247 Make sure the color mode is correct.'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkWarpScalar instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 248 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 249 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 250 Default ScaleFactor should be 1'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 251 Default UseNormal should be false'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 252 Default xyPlane should be false'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 253 Default normal should be [0, 0, 1]'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 254 Updated value of ScaleFactor should be 2.5'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkWarpScalar execution'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 255 Output dataset exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 256 The output dataset should be a vtkPolydata'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 257 The number of points do not change between input 50 and output 50'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTextureMapToPlane instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 258 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 259 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTextureMapToPlane TCoords generation'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 260 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 261 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 262 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 263 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 264 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 265 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 266 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 267 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 268 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 269 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 270 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 271 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 272 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 273 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 274 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 275 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 276 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 277 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 278 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 279 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 280 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 281 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 282 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 283 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 284 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 285 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 286 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 287 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 288 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 289 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 290 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 291 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 292 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 293 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 294 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 295 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 296 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 297 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 298 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 299 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 300 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 301 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 302 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 303 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 304 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 305 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 306 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 307 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTextureMapToPlane TCoords generation automatic'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 308 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 309 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 310 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 311 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 312 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 313 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 314 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 315 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 316 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 317 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 318 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 319 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 320 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 321 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 322 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 323 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 324 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 325 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 326 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 327 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 328 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 329 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 330 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 331 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 332 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 333 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 334 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 335 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 336 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 337 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 338 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 339 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 340 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 341 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 342 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 343 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 344 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 345 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 346 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 347 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 348 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 349 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 350 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 351 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 352 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 353 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 354 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 355 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTextureMapToSphere instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 356 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 357 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkTextureMapToSphere TCoords generation'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 358 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 359 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 360 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 361 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 362 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 363 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 364 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 365 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 366 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 367 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 368 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 369 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 370 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 371 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 372 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 373 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 374 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 375 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 376 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 377 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 378 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 379 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 380 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 381 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 382 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 383 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 384 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 385 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 386 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 387 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 388 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 389 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 390 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 391 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 392 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 393 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 394 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 395 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 396 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 397 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 398 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 399 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 400 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 401 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 402 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 403 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 404 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 405 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPiecewiseFunctionProxy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 406 Custom points should not be active in Gaussian mode'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 407 Custom points should be active in Points mode'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 408 Default nodes'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 409 Default points'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 410 Default nodes'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkAbstractMapper publicAPI'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 411 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 412 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 413 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 414 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 415 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 416 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 417 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 418 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 419 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 420 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 421 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 422 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 423 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCellPicker instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 424 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 425 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkCoordinate publicAPI'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 426 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 427 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 428 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 429 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 430 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 431 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 432 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 433 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 434 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 435 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 436 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 437 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 438 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 439 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 440 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 441 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 442 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 443 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 444 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 445 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 446 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 447 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 448 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 449 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 450 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 451 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 452 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 453 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 454 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 455 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 456 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 457 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 458 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 459 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 460 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 461 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 462 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 463 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 464 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 465 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 466 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 467 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 468 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 469 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 470 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 471 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 472 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 473 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 474 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 475 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 476 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 477 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 478 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 479 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 480 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 481 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 482 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 483 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 484 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 485 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 486 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 487 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 488 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 489 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 490 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 491 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 492 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 493 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 494 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 495 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 496 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 497 should be equivalent'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPointPicker instance'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 498 Make sure the class definition exists'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 499 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods algo tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 500 populate publicAPI'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 501 return input data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 502 Add two input arrays'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 503 Subtract two input arrays'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 504 Multiply two input arrays'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 505 Divide two input arrays, using outputPort'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods scalar tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 506 macro setget'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 507 Initial gets should match defaults'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 508 Bool get should match set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 509 Initial gets should match defaults'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 510 Int get should match set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 511 mtime should increase after set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 512 mtime should not increase after idempotent set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods array tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 513 Initial gets should match defaults'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 514 Throw if no set method declared'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 515 Array spread set OK'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 516 Array spread set should match get'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 517 OK to set a single array argument'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 518 Array set should match get'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 519 mtime should increase after set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 520 Invalid number of values should throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 521 Keep default value after illegal set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 522 mtime should not increase after idempotent set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 523 Invalid number of values should throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 524 Keep value after illegal set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 525 Invalid set with string should throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 526 Keep value after illegal set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods enum tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 527 Initial gets should match defaults'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 528 Enum set should match get'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 529 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 530 Enum set by index should get matching enum value'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 531 Setting idempotent value should return false'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) ERROR: 'Set Enum outside numeric range [object Object], 42'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 532 Invalid enum index should throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 533 Enum set out of range should be rejected'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) ERROR: 'Set Enum with invalid argument [object Object], FORTH'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 534 Invalid enum string should throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 535 Enum set string out of range should be rejected'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) ERROR: 'Set Enum with invalid argument (String/Number) [object Object], 2'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 536 Invalid enum set with array/object should throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 537 Enum set string out of range should be rejected'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods object tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 538 Get entire model'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 539 Get defaults back test'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 540 Object should be frozen'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) WARN: 'Warning: Set value to model directly changeWhenModified, foo'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 541 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) WARN: 'Warning: Set value to model directly changeWhenModified, bar'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 542 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 543 Object modified fires'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) WARN: 'Warning: Set value to model directly changeWhenModified, foobaz'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 544 Object modified does not fire after unsubscribe'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 545 Test mult-set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 546 Float get should match multi-set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 547 Array multi-set should match get'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 548 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 549 should be truthy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 550 should be falsy'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 551 should be equal'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 552 should not throw'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 553 All calls should do nothing after delete'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods event tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 554 cbAbort1 should be called first'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 555 cbAbort2 should be called second'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 556 Only 2 callbacks should be invoked, not 3'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 557 cbPriority2 should be called first'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 558 cbPriority2 should be called first'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 559 cbPriority1 should be called second'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 560 cbPriority0 should be called third'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 561 cbPriorityLast should be called last after 101ms'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 562 cbPriority2 should be called exactly twice'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Macro methods keystore tests'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 563 key1 should exist in keystore'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 564 key2 should exist in keystore'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 565 key3 should exist in keystore'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 566 Delete key2 should succeed'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 567 There should be no keys after clearing'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkDataArray serialization/deserialization'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 568 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 569 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 570 Make sure we can get serialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 571 Make sure we can get deserialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 572 We have two different instances'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 573 But same serialized content'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPoints serialization/deserialization'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 574 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 575 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 576 Make sure we can get serialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 577 Make sure we can get deserialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 578 We have two different instances'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 579 But same serialized content'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkLookupTable serialization/deserialization'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 580 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 581 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 582 Make sure we can get serialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 583 Make sure we can get deserialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 584 We have two different instances'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 585 But same serialized content'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkScalarsToColors serialization/deserialization'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 586 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 587 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 588 Make sure we can get serialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 589 Make sure we can get deserialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 590 We have two different instances'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 591 But same serialized content'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Test vtkPolyData serialization/deserialization'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 592 Make sure the class definition exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 593 Make sure the instance exist'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 594 Make sure we can get serialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 595 Make sure we can get deserialize data'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 596 We have two different instances'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 597 But same serialized content'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Proxy activation via config'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 598 No initial active source'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 599 Active source set after proxy creation'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# Proxy activation via .activate()'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 600 No initial active source'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 601 No active source after proxy creation'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 602 Proxy manager should be modified after proxy activation'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: 'ok 603 Active source set'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: ''
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '1..603'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# tests 603'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: '# pass  603'
,HeadlessChrome 79.0.3945 (Linux 0.0.0) LOG: ''

]]>
  </system-out>
  <system-err/>
</testsuite>